// Se importa la biblioteca Express, que se utilizará para crear y manejar el servidor.
const express = require('express');
const app = express();

// Se utiliza el middleware express.json() para permitir el uso de datos JSON en las solicitudes HTTP.
app.use(express.json());

// Se define una ruta para manejar solicitudes HTTP POST a la ruta `/deserialize`.
app.post('/deserialize', (req, res) => {
  try {
    // Se intenta analizar los datos serializados JSON enviados en el cuerpo de la solicitud HTTP POST.
    const deserializedData = JSON.parse(req.body.serializedData);

    // Si se pudo analizar la cadena JSON correctamente, se envía una respuesta HTTP con los datos deserializados.
    res.status(200).send(`Deserialized data: ${JSON.stringify(deserializedData)}`);
  } catch (error) {
    // Si se produjo un error durante la deserialización, se envía una respuesta HTTP con un mensaje de error.
    res.status(500).send('Error during deserialization');
  }
});

// Se inicia el servidor en el puerto 3000 y se registra un mensaje en la consola para indicar que el servidor está en ejecución.
app.listen(3000, () => {
  console.log('Server listening on port 3000');
});
